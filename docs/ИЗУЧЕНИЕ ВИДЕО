UDP-СТРИМ ИЗ ФАЙЛА
ffmpeg -re -i myvideo -vcodec copy -f mpegts udp://127.0.0.1:1234

ПРОСМОТР UDP-СТРИМА
ffplay -protocol_whitelist "file,udp,rtp" -i udp://127.0.0.1:1234

Перенаправить изображение с вебкамеры в окно, созданное через SDL
ffmpeg -i /dev/video0 -c:v rawvideo -pix_fmt yuv420p -f sdl "SDL output"


Запись звука с микрофона в файл в течении 5 секунд
ffmpeg -f alsa -i hw:0,7 -t 5 testmic.mp3
чтобы узнать аудиоустройства: arecord -l


Запись видео с вебкамеры в файл пока сам не остановлю
ffmpeg -f v4l2 -framerate 25 -video_size 640x480 -i /dev/video0 output.mkv

RTP-СТРИМ ИЗ ФАЙЛА
ffmpeg -re -i myvideo -vcodec copy -f rtp rtp://127.0.0.1:1234 # чет пока не работает для файла H264
ffmpeg -re -i myvideo -vcodec copy -f rtp_mpegts rtp://127.0.0.1:1234 # а вот так работает для файла H264
отправка на другой ноут
ffmpeg -re -i 1.mp4 -vcodec copy -f rtp_mpegts rtp://10.11.62.114:1234


ПРОСМОТР RTP-СТРИМА
ffplay -protocol_whitelist "file,udp,rtp" -i rtp://127.0.0.1:1234 # работает

тут еще как то завязаны файлы .sdp


ПРОСМОТР RTSP-стрима (не пробовал еще)
ffplay -fflags nobuffer -flags low_delay -framedrop -strict experimental -rtsp_transport tcp "rtsp://192.168.0.27:554/user=admin&password=secret&channel=1&stream=0" -x 1024 -y 768
-flags nobuffer # уменьшает задержку появляющуюся при буферизации поток
-framedrop # дропать кадры при проблемах
-strict experimental # хуй знает
-rtsp_transport # канал (???)
rtsp:///...554/user=admin&password=secret&channel=1&stream=0 # источник, формат строки зависит от камеры, но будет логин/пароль и т.д 
-x 1024 -y 768 # размер итогового видео


Стрим по RTMP


